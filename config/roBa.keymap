#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

&mt {
    flavor = "balanced";
    quick-tap-ms = <0>;
};

&trackball {
    automouse-layer = <4>;
    scroll-layers = <5>;

    // arrows {
    //     layers = <3>;
    //     bindings =
    //         <&kp RIGHT_ARROW>,
    //         <&kp LEFT_ARROW>,
    //         <&kp UP_ARROW>,
    //         <&kp DOWN_ARROW>;
    //     tick = <10>;
    //     wait-ms = <5>;
    //     tap-ms = <5>;
    // };
};

/ {
    combos {
        compatible = "zmk,combos";

        tab {
            bindings = <&kp TAB>;
            key-positions = <11 12>;
        };

        shift_tab {
            bindings = <&kp LS(TAB)>;
            key-positions = <12 13>;
        };

        muhennkann {
            bindings = <&to_layer_0 INT_MUHENKAN>;
            key-positions = <11 10>;
        };

        double_quotation {
            bindings = <&kp DOUBLE_QUOTES>;
            key-positions = <20 21>;
        };

        eq {
            bindings = <&kp EQUAL>;
            key-positions = <24 25>;
        };
    };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp Q             &kp W         &kp E         &kp R                        &kp T                                                  &kp Y           &kp U  &lt 5 I    &kp O    &kp P
&kp A             &kp S         &kp D         &kp F                        &kp G        &kp LS(LG(S))      &kp MINUS              &kp H           &kp J  &kp K      &kp L    &kp RCTRL
&mt LEFT_SHIFT Z  &kp X         &kp C         &kp V                        &kp B        &kp COLON          &kp SEMICOLON          &kp N           &kp M  &kp COMMA  &kp DOT  &lt 3 ENTER
&kp LCTRL         &kp LEFT_WIN  &kp LEFT_ALT  &lt_to_layer_0 6 INT_HENKAN  &lt 2 SPACE  &lt 3 SPACE        &lt 1 C_AL_SPELLCHECK  &kp LEFT_SHIFT                             &kp DEL
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        FUNCTION {
            bindings = <
&kp ESC         &kp LC(A)     &kp LC(E)  &kp RC(P)  &kp LC(T)                            &kp LC(N)  &kp LC(Y)  &kp LC(K)       &kp LC(LS(MINUS))  &kp BACKSPACE
&kp TAB         &kp RC(S)     &kp LC(D)  &kp LC(F)  &kp LC(G)       &trans      &kp F13  &kp LC(M)  &mkp MB1   &kp UP_ARROW    &mkp MB2           &kp ENTER
&kp LC(A)       &kp LC(X)     &kp LC(C)  &kp LC(V)  &kp RA(RS(N5))  &trans      &trans   &trans     &kp LEFT   &kp DOWN_ARROW  &kp RIGHT          &kp LEFT_SHIFT
&kp LEFT_SHIFT  &kp LEFT_ALT  &trans     &trans     &trans          &trans      &trans   &trans                                                   &kp F12
            >;
        };

        NUM {
            bindings = <
&kp N7        &kp N8        &kp NUMBER_9  &kp N0           &kp PLUS                                                   &kp CARET         &kp AMPERSAND      &kp TILDE       &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS
&kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp KP_NUMBER_6  &kp ASTERISK  &kp LC(LA(KP_NUMBER_0))      &kp UNDERSCORE  &kp EXCLAMATION   &mkp MB1           &kp HASH        &kp DOLLAR            &kp SLASH
&kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp KP_NUMBER_3  &kp PERIOD    &kp EQUAL                    &kp LS(N5)      &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LEFT_BRACE  &kp RIGHT_BRACE       &kp MINUS
&kp NUMBER_0  &kp N0        &trans        &trans           &trans        &trans                       &kp SPACE       &kp LEFT_SHIFT                                                             &kp PIPE
            >;
        };

        ARROW {
            bindings = <
&kp LG(Q)       &kp LG(W)  &kp RG(E)       &kp RG(R)         &trans                                        &trans  &trans  &trans  &trans  &trans
&kp LC(SPACE)   &kp RG(S)  &kp DOWN_ARROW  &kp LEFT_COMMAND  &kp TAB  &trans                    &trans     &trans  &trans  &trans  &trans  &trans
&kp LEFT_SHIFT  &kp RG(X)  &kp RG(C)       &kp LG(V)         &trans   &kp LG(LS(NUMBER_4))      &trans     &trans  &trans  &trans  &trans  &trans
&trans          &trans     &trans          &trans            &trans   &trans                    &kp SPACE  &trans                          &trans
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &mkp MB1  &mkp MB3  &mkp MB2  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans    &trans    &trans    &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                                &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans                      &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans      &trans  &trans                          &trans
            >;
        };

        layer_6 {
            bindings = <
&trans  &trans        &trans        &trans        &trans                           &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans        &trans        &trans        &trans        &trans
&trans  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans      &bootloader  &trans        &trans        &trans        &trans        &bt BT_CLR
&trans  &trans        &trans        &trans        &trans  &trans      &trans       &trans                                                  &bt BT_CLR_ALL
            >;
        };
    };
};
